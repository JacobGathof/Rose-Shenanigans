#version 400 core

layout (location = 0) in vec2 vertices;
layout (location = 1) in vec2 texCoords;

out vec2 texCoords_;
out vec2 fragPos_;

uniform vec2 scale;
uniform vec2 pos;
uniform float animTimer;
uniform int direction;
uniform vec2 cameraPosition;

uniform int rows;
uniform int cols;

const mat4 projectionMatrix = mat4(vec4(1.0/64,0,0,0), vec4(0,1.0/64,0,0), vec4(0,0,2,-1), vec4(0,0,0,1));

void main(){
	
	gl_Position = projectionMatrix * 
		vec4(
		vertices.x*scale.x + pos.x - cameraPosition.x, 
		vertices.y*scale.y + pos.y - cameraPosition.y, 0.0 , 1.0);

	fragPos_ =
		vec4(
		vertices.x*scale.x + pos.x, 
		vertices.y*scale.y + pos.y, 0.0 , 1.0).xy;

	texCoords_ = vec2(texCoords.x/cols + (1.0/cols) * mod(round(animTimer*4.0), cols) , texCoords.y/rows + (1.0/rows) * direction);


	if(direction == 4){
		int index = int(mod(round(animTimer*8), (cols*4)));
		index = (index > 2) ? 0 : index;
		texCoords_ = vec2(texCoords.x/cols + (1.0/cols) * index , texCoords.y/rows + (1.0/rows) * direction);
	}

}